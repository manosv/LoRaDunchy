function Decoder(bytes, port) {
  // Decode an uplink message from a buffer
  // (array) of bytes to an object of fields.
  var decoded = {};
  var i = 0;
  var x;
  var tempH, tempL;
  
  /*
  
  from sensors.h ...
  
typedef struct
{
	uint16_t pm2_5;		// PM 2.5 
	uint16_t pm10;		// PM 10
	int16_t si7013_T; // Temperature from SI7013 in 1/100 deg. C 
	uint8_t si7013_RH;// Relative humidity from SI7013 in %RH
} sen_readout_t;
*/

   if (port === 2) 
   {
     x = bytes[i++] | bytes[i++] << 8;  decoded.pm2_5 = x ;
     x = bytes[i++] | bytes[i++] << 8;  decoded.pm10 = x ;
     
     // signed int16
     tempL = bytes[i++]; tempH = bytes[i++];
     var TempInt16 = (tempH & 0x80 ? 0xFFFF<<16 : 0) | tempH<<8 | tempL;
     decoded.T = (TempInt16)/100 ;
     x = bytes[i++];  decoded.RH = x ;
    }

  return decoded;
}